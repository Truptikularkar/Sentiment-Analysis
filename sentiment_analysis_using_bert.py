# -*- coding: utf-8 -*-
"""Sentiment analysis using BERT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ArSwmxAOhJaWaIjoZk1aOQF2to3EfkfU

# **Install and Import Dependencies**
"""

!pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

!pip install transformers requests beautifulsoup4 pandas numpy

"""# **Instantiate Model**"""

from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import requests
from bs4 import BeautifulSoup
import re

tokenizer = AutoTokenizer.from_pretrained("nlptown/bert-base-multilingual-uncased-sentiment")
model = AutoModelForSequenceClassification.from_pretrained("nlptown/bert-base-multilingual-uncased-sentiment")

"""# **Encode and Calculate Sentiment**"""

tokens = tokenizer.encode("I hated this, absolutely the worst", return_tensors='pt')

tokens

result =model(tokens)

result

int(torch.argmax(result.logits))+1

"""# **Collect Reviews**"""

r = requests.get("https://www.yelp.com/biz/mejico-sydney-2")
soup = BeautifulSoup(r.text, 'html.parser')
regex = re.compile('.*comment.*')
results = soup.find_all('p', {'class':regex})
reviews = [result.text for result in results]

reviews

results[0]

r.text

soup.find

"""# **Load Reviews into DataFrame and Score**"""

import numpy as np
import pandas as pd

df = pd.DataFrame(np.array(reviews), columns=['review'])

df.head

df['review'].iloc[0]

def sentiment_score(review):
  tokens = tokenizer.encode(review, return_tensors='pt')
  result  =model(tokens)
  return int(torch.argmax(result.logits))+1

sentiment_score(df['review'].iloc[1])

df['sentiment'] = df['review'].apply(lambda x: sentiment_score(x[:512]))

df['review']

df

df['review'].iloc[3]

